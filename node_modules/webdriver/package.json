{
  "_args": [
    [
      "webdriver@5.23.0",
      "/home/nikhitakale/Desktop/HFC-CodeceptJS/node_modules/webdriverio"
    ]
  ],
  "_from": "webdriver@5.23.0",
  "_hasShrinkwrap": false,
  "_id": "webdriver@5.23.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/webdriver",
  "_nodeVersion": "12.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webdriver_5.23.0_1590432734926_0.48224131215620547"
  },
  "_npmUser": {
    "email": "christian@saucelabs.com",
    "name": "christian-bromann"
  },
  "_npmVersion": "lerna/3.22.0/node@v12.14.1+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "webdriver",
    "raw": "webdriver@5.23.0",
    "rawSpec": "5.23.0",
    "scope": null,
    "spec": "5.23.0",
    "type": "version"
  },
  "_requiredBy": [
    "/webdriverio"
  ],
  "_resolved": "https://registry.npmjs.org/webdriver/-/webdriver-5.23.0.tgz",
  "_shasum": "5373e3e43803aaf962da24b47bbdb98bf8f84cc6",
  "_shrinkwrap": null,
  "_spec": "webdriver@5.23.0",
  "_where": "/home/nikhitakale/Desktop/HFC-CodeceptJS/node_modules/webdriverio",
  "author": {
    "email": "christian@saucelabs.com",
    "name": "Christian Bromann"
  },
  "bugs": {
    "url": "https://github.com/webdriverio/webdriverio/issues"
  },
  "dependencies": {
    "@types/request": "^2.48.4",
    "@wdio/config": "5.22.4",
    "@wdio/logger": "5.16.10",
    "@wdio/protocols": "5.22.1",
    "@wdio/utils": "5.23.0",
    "lodash.merge": "^4.6.1",
    "request": "^2.83.0"
  },
  "description": "A Node.js bindings implementation for the W3C WebDriver and Mobile JSONWire Protocol",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 8,
    "integrity": "sha512-r7IrbZ2SuTIRyWV8mv4a4hZoFcT9Qt4MznOkdRWPE1sPpZ8lyLZsIEjKCEbHelOzPwURqk+biwGrm4z2OZRAiw==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezBPfCRA9TVsSAnZWagAAf0UP/0GR1bG9Mj1835puHmb3\npgQBsaLRouB5c9nbzp7MG0giQc86w0iZT4pQZ4RBk7JXU7GS3GaVEdAlp28s\nOkuoWl1eEsm7X0Q3WCLXvejHJcxdFukwu192v05aFz0B9J9XWuD40mvKUxFM\nQ9DxCzndMIbmYuIJtFQBkAIC6qr0t9rzPw/xqyGa9qrK97tNDAvcDsGxrcIV\nNMFsuPwVaQRh6wiw59YXcCLkrqJuGPrfom5Tfiq5mRQKSeej77f8fpYQ9XQm\n404E//AjqFgYkYfnQP3uZdnLdVqbNdtncSDlJ6jwVmWscv5q96uVjkIYm+eW\nySZv1mk89MJLL6UeQPy7Ohd7lY3KLV2C80TCvFyIsO9hgYftmfBl6MTsMqF/\nF1ztVdF4YY9pr2+tM8qeM3U/HYASukSZTOJ+wxcDAf3XST8UEES9KQEDoDro\nIWorKxG3Gw5lNk7f4MppFZLLx/8vF32Asb+TNrS8tgTq72OR7XO5CMdF8v8P\naoZtXQpyqc3JCIJCY3DZCiYvfw/mBnF4z4IWCIYsNOGBIVmkLPjJpRFPpGsF\nbzDC7cTyBbZRvCw4l/D212Z3VWUHRQUYv7DEy/NCVn1OaxWXUGnPiH02NdE1\nS3gkrbN++gdujoX2bUeRq/FsfB1kuUU9/k7Od124tNotpuxYOQVqMxE6n4F2\nTClv\r\n=JxN3\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "5373e3e43803aaf962da24b47bbdb98bf8f84cc6",
    "tarball": "https://registry.npmjs.org/webdriver/-/webdriver-5.23.0.tgz",
    "unpackedSize": 117396
  },
  "engines": {
    "node": ">= 8.11.0"
  },
  "gitHead": "a9b8098ad18074e05a72c0458a7845a41a40aa93",
  "homepage": "https://github.com/webdriverio/webdriverio/tree/master/packages/webdriver",
  "keywords": [
    "webdriver"
  ],
  "license": "MIT",
  "main": "./build/index",
  "maintainers": [
    {
      "name": "abjerstedt",
      "email": "abjerstedt@gmail.com"
    },
    {
      "name": "christian-bromann",
      "email": "christian@saucelabs.com"
    },
    {
      "name": "erwinheitzman",
      "email": "erwin.heitzman.npm@gmail.com"
    },
    {
      "name": "klamping",
      "email": "me@klamp.in"
    },
    {
      "name": "mgrybyk",
      "email": "mykola.grybyk@gmail.com"
    },
    {
      "name": "wdio-user",
      "email": "christian+webdriverio@saucelabs.com"
    },
    {
      "name": "willbrock",
      "email": "wpbrock@gmail.com"
    }
  ],
  "name": "webdriver",
  "optionalDependencies": {},
  "readme": "WebDriver\n=========\n\n> A lightweight, non-opinionated implementation of the [WebDriver specification](https://w3c.github.io/webdriver/webdriver-spec.html) including mobile commands supported by [Appium](http://appium.io/)\n\nThere are [tons](https://github.com/christian-bromann/awesome-selenium#javascript) of Selenium and WebDriver binding implementations in the Node.js world. Every one of them have an opinionated API and recommended way to use. This binding is the most non-opinionated you will find as it just represents the [WebDriver specification](https://w3c.github.io/webdriver/webdriver-spec.html) and doesn't come with any extra or higher level abstraction. It is lightweight and comes with support for the [WebDriver specification](https://w3c.github.io/webdriver/webdriver-spec.html) and Appiums [Mobile JSONWire Protocol](https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md).\n\n## Install\n\nTo install this package from NPM run:\n\n```sh\n$ npm i webdriver\n```\n\n## Example\n\nThe following example demonstrates a simple Google Search scenario:\n\n```js\nimport WebDriver from 'webdriver'\n\n;(async () => {\n    const client = await WebDriver.newSession({\n        path: '/',\n        capabilities: { browserName: 'firefox' }\n    })\n\n    await client.navigateTo('https://www.google.com/ncr')\n\n    const searchInput = await client.findElement('css selector', '#lst-ib')\n    await client.elementSendKeys(searchInput['element-6066-11e4-a52e-4f735466cecf'], 'WebDriver')\n\n    const searchBtn = await client.findElement('css selector', 'input[value=\"Google Search\"]')\n    await client.elementClick(searchBtn['element-6066-11e4-a52e-4f735466cecf'])\n\n    console.log(await client.getTitle()) // outputs \"WebDriver - Google Search\"\n\n    await client.deleteSession()\n})()\n```\n\n# Configuration\n\nTo create a WebDriver session call the `newSession` method on the `WebDriver` class and pass in your configurations:\n\n```js\nimport WebDriver from 'webdriver'\nconst client = await WebDriver.newSession(options)\n```\n\nThe following options are available:\n\n### capabilities\nDefines the [capabilities](https://w3c.github.io/webdriver/webdriver-spec.html#capabilities) you want to run in your Selenium session.\n\nType: `Object`<br>\nRequired: `true`\n\n### logLevel\nLevel of logging verbosity.\n\nType: `String`<br>\nDefault: *info*<br>\nOptions: *trace* | *debug* | *info* | *warn* | *error* | *silent*\n\n### protocol\nProtocol to use when communicating with the Selenium standalone server (or driver).\n\nType: `String`<br>\nDefault: *http*\nOptions: *http* | *https*\n\n### hostname\nHost of your WebDriver server.\n\nType: `String`<br>\nDefault: *localhost*\n\n### port\nPort your WebDriver server is on.\n\nType: `Number`<br>\nDefault: *4444*\n\n### path\nPath to WebDriver server.\n\nType: `String`<br>\nDefault: */wd/hub*\n\n### baseUrl\nShorten `url` command calls by setting a base url.\n\nType: `String`<br>\nDefault: *null*\n\n### connectionRetryTimeout\nTimeout for any WebDriver request to a driver or grid.\n\nType: `Number`<br>\nDefault: *90000*\n\n### connectionRetryCount\nCount of request retries to the Selenium server.\n\nType: `Number`<br>\nDefault: *2*\n\n### transformRequest\nFunction intercepting [HTTP request options](https://github.com/request/request#requestoptions-callback) before a WebDriver request is made\n\nType: `(RequestOptions) => RequestOptions`<br>\nDefault: *none*\n\n### transformResponse\nFunction intercepting HTTP response objects after a WebDriver response has arrived\n\nType: `(Response, RequestOptions) => Response`<br>\nDefault: *none*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/webdriverio/webdriverio.git"
  },
  "scripts": {
    "build": "run-s clean compile",
    "clean": "rimraf ./build",
    "compile": "babel src/ -d build/ --config-file ../../babel.config.js",
    "test": "run-s test:*",
    "test:eslint": "eslint src test",
    "test:unit": "jest"
  },
  "typeScriptVersion": "3.5.1",
  "types": "./webdriver.d.ts",
  "version": "5.23.0"
}
